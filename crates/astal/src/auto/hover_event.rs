// This file was generated by gir (https://github.com/gtk-rs/gir)
// from /usr/share/gir-1.0
// from ../../gobject/gir-files
// DO NOT EDIT

use crate::{ffi};
use glib::{translate::*};

glib::wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct HoverEvent(Boxed<ffi::AstalHoverEvent>);

    match fn {
        copy => |ptr| glib::gobject_ffi::g_boxed_copy(ffi::astal_hover_event_get_type(), ptr as *mut _) as *mut ffi::AstalHoverEvent,
        free => |ptr| glib::gobject_ffi::g_boxed_free(ffi::astal_hover_event_get_type(), ptr as *mut _),
        type_ => || ffi::astal_hover_event_get_type(),
    }
}

impl HoverEvent {
    #[doc(alias = "astal_hover_event_init")]
#[must_use]
    pub fn init(event: &mut gdk::EventCrossing) -> HoverEvent {
        unsafe {
            ffi::astal_hover_event_init(self.to_glib_none_mut().0, event.to_glib_none_mut().0);
        }
    }
}
